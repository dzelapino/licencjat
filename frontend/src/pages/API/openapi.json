{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger Game Service - OpenAPI 3.0",
    "description": "This is a sample Game Service Server based on the OpenAPI 3.0 specification.",
    "contact": {
      "email": "j.falkiewicz.089@studms.ug.edu.pl"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "paths": {
    "/game": {
      "post": {
        "tags": ["Game"],
        "summary": "Create a new game",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Game"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Game created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "msgBody": {
                          "type": "string"
                        },
                        "msgError": {
                          "type": "boolean"
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error creating the game",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "msgBody": {
                          "type": "string"
                        },
                        "msgError": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Game"],
        "summary": "Get all games",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Game"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error fetching games",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "msgBody": {
                          "type": "string"
                        },
                        "msgError": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/game/myGames": {
      "get": {
        "tags": ["Game"],
        "summary": "Get games created by the authenticated user",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Game"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/game/byUser/{userId}": {
      "get": {
        "tags": ["Game"],
        "summary": "Get games by user ID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Game"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error fetching games",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "msgBody": {
                          "type": "string"
                        },
                        "msgError": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/game/{gameId}": {
      "get": {
        "tags": ["Game"],
        "summary": "Get game by ID",
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "Game ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Game"
                }
              }
            }
          },
          "500": {
            "description": "Error fetching game",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "msgBody": {
                          "type": "string"
                        },
                        "msgError": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Game"],
        "summary": "Update game by ID",
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "Game ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Game"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Game updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Game"
                }
              }
            }
          },
          "500": {
            "description": "Error updating game",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "msgBody": {
                          "type": "string"
                        },
                        "msgError": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/score": {
      "post": {
        "tags": ["Score"],
        "summary": "Create a new score",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "private": {
                    "type": "boolean"
                  },
                  "game": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "player": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Score created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "msgBody": {
                          "type": "string"
                        },
                        "msgError": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error creating the score",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "msgBody": {
                          "type": "string"
                        },
                        "msgError": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Score"],
        "summary": "Get all scores",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Score"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error fetching scores",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "msgBody": {
                          "type": "string"
                        },
                        "msgError": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/score/scoreboard/{gameId}": {
      "get": {
        "tags": ["Score"],
        "summary": "Get scoreboard by game ID",
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "Game ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Score"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error fetching scores",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "msgBody": {
                          "type": "string"
                        },
                        "msgError": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/score/myScores": {
      "get": {
        "tags": ["Score"],
        "summary": "Get scores of the authenticated user",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Score"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/score/{gameId}": {
      "get": {
        "tags": ["Score"],
        "summary": "Get scores by game ID",
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "Game ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Score"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error fetching scores",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "msgBody": {
                          "type": "string"
                        },
                        "msgError": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": ["User"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "adminKey": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "msgBody": {
                          "type": "string"
                        },
                        "msgError": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error registering the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "msgBody": {
                          "type": "string"
                        },
                        "msgError": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": ["User"],
        "summary": "User login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isAuthenticated": {
                      "type": "boolean"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    },
                    "jwt": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Account disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "msgBody": {
                          "type": "string"
                        },
                        "msgError": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": ["User"],
        "summary": "User logout",
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "msgBody": {
                          "type": "string"
                        },
                        "msgError": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/pages": {
      "get": {
        "tags": ["User"],
        "summary": "Get the number of user pages",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "size": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/byPage/{pageNumber}": {
      "get": {
        "tags": ["User"],
        "summary": "Get users by page number",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "path",
            "description": "Page number",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error fetching users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "msgBody": {
                          "type": "string"
                        },
                        "msgError": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/byId/{userId}": {
      "get": {
        "tags": ["User"],
        "summary": "Get a user by ID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "500": {
            "description": "Error fetching the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "msgBody": {
                          "type": "string"
                        },
                        "msgError": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/updateEmail/{userId}": {
      "put": {
        "tags": ["User"],
        "summary": "Update a user's email",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "msgBody": {
                          "type": "string"
                        },
                        "msgError": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "msgBody": {
                          "type": "string"
                        },
                        "msgError": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Error updating the email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "msgBody": {
                          "type": "string"
                        },
                        "msgError": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/updatePassword/{userId}": {
      "put": {
        "tags": ["User"],
        "summary": "Update a user's password",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "msgBody": {
                          "type": "string"
                        },
                        "msgError": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Error updating the password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "msgBody": {
                          "type": "string"
                        },
                        "msgError": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/toggleAccount/{userId}": {
      "put": {
        "tags": ["User"],
        "summary": "Toggle a user's account status",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User account status toggled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "msgBody": {
                          "type": "string"
                        },
                        "msgError": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Error toggling the user's account status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "msgBody": {
                          "type": "string"
                        },
                        "msgError": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Game": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 5,
            "maxLength": 30
          },
          "elementToCompare": {
            "type": "string",
            "minLength": 6,
            "maxLength": 10000
          },
          "order": {
            "type": "string",
            "enum": ["asc", "desc"]
          },
          "author": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": ["active", "test", "rejected"]
          },
          "files": {
            "type": "array",
            "items": {}
          },
          "testComment": {
            "type": "string"
          }
        },
        "required": ["name", "elementToCompare", "order", "status"]
      },
      "Score": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string"
          },
          "private": {
            "type": "boolean"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "game": {
            "type": "string",
            "format": "uuid"
          },
          "player": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": ["amount", "private", "game", "player"]
      },
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "minLength": 5,
            "maxLength": 15
          },
          "email": {
            "type": "string",
            "maxLength": 50
          },
          "password": {
            "type": "string",
            "minLength": 8
          },
          "admin": {
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean"
          }
        },
        "required": ["username", "email", "password", "admin", "disabled"]
      }
    }
  }
}
